#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include <QTimer>
#include <QWidget>
#include <QMouseEvent>
#include <QCursor>
#include <QPainter>
#include <QtMath>
#include <QPainterPath>
#include <QAbstractAnimation>
#include <QPropertyAnimation>


#include "form.h"

struct ligne
{
  QPoint  pta;
  QPoint ptb;
  QList<QPoint> ptint;

};

struct ballon
{
  QPoint  pta;
  QPoint ptb;
  QList<QPoint> ptint;

};

struct joueur_2
{
  QPoint  pta;
  QPoint ptb;
  QList<QPoint> ptint;

};

QT_BEGIN_NAMESPACE
namespace Ui { class MainWindow; }
QT_END_NAMESPACE

class MainWindow : public QMainWindow
{
  Q_OBJECT

public:
  MainWindow(QWidget *parent = nullptr);
  ~MainWindow();

  void mousePressEvent ( QMouseEvent * event )  override;
  void mouseMoveEvent(QMouseEvent *event) override;
  void mouseReleaseEvent(QMouseEvent *event) override;

private slots:
  void paintEvent(QPaintEvent* )  override;
  void animationStart();

 // void paint(QPainter *painter);



  void on_start_clicked();

private:
  Ui::MainWindow *ui;
  QTimer *timer;
int mouvement = 0;
  bool switchPoint=1;
  QPen pen;
  QBrush brush;
  QPoint lastPoint;
  QPoint firstPoint;
  QList<QPoint> interPoint;
  QRect rec1;
  QPainter *pencilPainter = new QPainter(this);
  ligne *tempLigne = new ligne();
  ligne *ligne_ballon = new ligne();
  ligne *ligne_joueur_2 = new ligne();
  bool mousePressed;
  bool isDrawing , isMoving = false ;
  unsigned index = 0 ;
  unsigned pt = 0;
  QPoint coord;
  float x = 0;
  unsigned index_2=0;
  QList<ligne> mesLignes;
  QList<ballon> LeBallon;
  QList<joueur_2> AutreJoueur;
  int avance;


};
#endif // MAINWINDOW_H
